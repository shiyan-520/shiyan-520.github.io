<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sh1yan&#39;blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="sh1yan.top/"/>
  <updated>2020-05-30T09:48:55.393Z</updated>
  <id>sh1yan.top/</id>
  
  <author>
    <name>shiyan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BurpSuite插件编写[中级篇]</title>
    <link href="sh1yan.top/2020/05/30/Burpseuite-plug-in-writing-intermediate/"/>
    <id>sh1yan.top/2020/05/30/Burpseuite-plug-in-writing-intermediate/</id>
    <published>2020-05-30T14:25:55.000Z</published>
    <updated>2020-05-30T09:48:55.393Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在初级篇中，我们分别介绍了burp的debug的方法和一个官方插件库中的一个burp插件源码分析，而该中级篇则将讲的是开发一个基于被动或者主动识别漏洞路径关键词插件，而该插件可以在我开着burp流量网站的时候，替我们主动或被动识别出可能存在相关漏洞的URL路径。&lt;br&gt;
    
    </summary>
    
      <category term="编程代码" scheme="sh1yan.top/categories/%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="burp" scheme="sh1yan.top/tags/burp/"/>
    
  </entry>
  
  <entry>
    <title>安全审计之Pandas常用代码</title>
    <link href="sh1yan.top/2020/05/22/Common-codes-of-pandas-in-security-audit/"/>
    <id>sh1yan.top/2020/05/22/Common-codes-of-pandas-in-security-audit/</id>
    <published>2020-05-22T15:50:55.000Z</published>
    <updated>2020-05-22T09:53:52.614Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在审计中除了使用Excel和SQL来进行处理分析一些数据，也会经常用到Pandas来做一些分析，而使用Pandas做分析的定位主要分为两点：1、当数据量过大的时候，普通Excel已经很难便捷的进行审计分析；2、当审计场景已经流程化，则需要固话成自动化的时候。&lt;/p&gt;
    
    </summary>
    
      <category term="安全审计" scheme="sh1yan.top/categories/%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="Python" scheme="sh1yan.top/tags/Python/"/>
    
      <category term="pandas" scheme="sh1yan.top/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite插件编写[初级篇]</title>
    <link href="sh1yan.top/2020/04/12/Writing-of-burpseuite-plug-in-preliminary/"/>
    <id>sh1yan.top/2020/04/12/Writing-of-burpseuite-plug-in-preliminary/</id>
    <published>2020-04-11T18:00:55.000Z</published>
    <updated>2020-04-11T18:19:47.957Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上一篇文章主要是介绍burp插件的基本情况，对插件编写有一个入门的了解，本篇将以调试分析的角度，记录一下学习方法和编写流程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 debug 前期文件准备&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在编写插件代码的时候，若不进行一步步的调试的话，只能是凭空造轮子，耗时耗力。&lt;br&gt;
    
    </summary>
    
      <category term="编程代码" scheme="sh1yan.top/categories/%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="burp" scheme="sh1yan.top/tags/burp/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite插件编写[入门篇]</title>
    <link href="sh1yan.top/2020/03/02/Writing-the-burpseuite-plug-in-beginner/"/>
    <id>sh1yan.top/2020/03/02/Writing-the-burpseuite-plug-in-beginner/</id>
    <published>2020-03-02T14:25:55.000Z</published>
    <updated>2020-03-02T14:26:24.118Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;burp作为web测试中最常用的工具，作为使用者更应该掌握下Extender的写法。这段时间搜集了一下关于插件的写法，发现基于Java的写法好少，基本上都是Python的教程，虽说大体上是一个写法，但是还是想总结总结下。&lt;br&gt;
    
    </summary>
    
      <category term="编程代码" scheme="sh1yan.top/categories/%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="burp" scheme="sh1yan.top/tags/burp/"/>
    
  </entry>
  
  <entry>
    <title>Java代码之读写示例</title>
    <link href="sh1yan.top/2020/02/09/Reading-and-writing-java-code/"/>
    <id>sh1yan.top/2020/02/09/Reading-and-writing-java-code/</id>
    <published>2020-02-09T14:51:55.000Z</published>
    <updated>2020-02-09T15:09:11.851Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近这几个月一直在学java，这几天为了搞懂Java的读写代码，特意总结了一下写法和意义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 代码详情&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程代码" scheme="sh1yan.top/categories/%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81/"/>
    
    
      <category term="java" scheme="sh1yan.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Django2.x 学习笔记分享&amp;学习路线推荐</title>
    <link href="sh1yan.top/2019/11/22/My-Django-notes/"/>
    <id>sh1yan.top/2019/11/22/My-Django-notes/</id>
    <published>2019-11-22T15:50:55.000Z</published>
    <updated>2019-11-22T12:57:21.470Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;近段时间一直抽空学习 Django ，真心感慨，Django这个Web框架是为完美主义者而生的，一切都是现成的，而且能满足大部分的需求，Python Web 的开发者首推框架。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="sh1yan.top/categories/Django/"/>
    
    
      <category term="学习笔记" scheme="sh1yan.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.9+Python3+Nginx+Uwsgi+Django2.0</title>
    <link href="sh1yan.top/2019/11/09/Django-deployment-method-one/"/>
    <id>sh1yan.top/2019/11/09/Django-deployment-method-one/</id>
    <published>2019-11-09T15:50:55.000Z</published>
    <updated>2019-11-09T15:13:17.526Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本文为 Centos6.9+Python3+Nginx+Uwsgi+Django2.0 下的部署方法，该方法不太适合纯小白直接粘贴复制，因为部分操作需要稍微修改为自己源码环境下路径才可以。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="sh1yan.top/categories/Django/"/>
    
    
      <category term="部署上线" scheme="sh1yan.top/tags/%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>基于Python3和Django编写的博客源码</title>
    <link href="sh1yan.top/2019/11/07/Blog-source-code-based-on-Python3-and-Django/"/>
    <id>sh1yan.top/2019/11/07/Blog-source-code-based-on-Python3-and-Django/</id>
    <published>2019-11-07T03:50:55.000Z</published>
    <updated>2019-11-07T08:06:08.691Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;很早之前就计划着，以后等有时间一定要自己写一个博客源码出来，然后方便自己使用，主要是受loid大佬的影响，当时他用的博客就是自己写的。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="sh1yan.top/categories/Django/"/>
    
    
      <category term="博客源码" scheme="sh1yan.top/tags/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81/"/>
    
      <category term="Python3" scheme="sh1yan.top/tags/Python3/"/>
    
  </entry>
  
  <entry>
    <title>或许是而转折，或者随之平常</title>
    <link href="sh1yan.top/2019/10/25/Maybe-it-s-a-turn-or-it-s-just-a-normal-thing/"/>
    <id>sh1yan.top/2019/10/25/Maybe-it-s-a-turn-or-it-s-just-a-normal-thing/</id>
    <published>2019-10-25T15:50:55.000Z</published>
    <updated>2019-10-25T16:27:46.916Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;博客已经一个多月没有更新了，但是这段时间经历了却是不少，故此一直想总结一下。&lt;/p&gt;
&lt;p&gt;感慨篇：&lt;br&gt;
    
    </summary>
    
      <category term="心情感悟" scheme="sh1yan.top/categories/%E5%BF%83%E6%83%85%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="sh1yan.top/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>hexo+GitHub博客后续维护问题解决方案</title>
    <link href="sh1yan.top/2019/09/18/Hexo-GitHub-Blog-Follow-up-Maintenance-Problem-Solution/"/>
    <id>sh1yan.top/2019/09/18/Hexo-GitHub-Blog-Follow-up-Maintenance-Problem-Solution/</id>
    <published>2019-09-18T10:50:55.000Z</published>
    <updated>2019-09-18T08:49:01.197Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 简述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本帖专门用于记录本博客后期维护中出现的各种问题的解决方案，长期维护更新。&lt;br&gt;
    
    </summary>
    
      <category term="博客相关" scheme="sh1yan.top/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="博客问题解决" scheme="sh1yan.top/tags/%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>被CVE-2019-0708打扰的一个周末（生活篇）</title>
    <link href="sh1yan.top/2019/09/07/A-Weekend-Disturbed-by-CVE-2019-0708%20(Life-Chapter)/"/>
    <id>sh1yan.top/2019/09/07/A-Weekend-Disturbed-by-CVE-2019-0708 (Life-Chapter)/</id>
    <published>2019-09-07T09:50:55.000Z</published>
    <updated>2019-09-07T08:34:52.422Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我的性格一般来说，是很少去复现一些漏洞的，尤其是系统层的，因为水平太菜，复现也就是简单的直接搭环境，然后exp打，想理解原理也理解不了。但是因为这个漏洞前段时间被称为核弹级的漏洞，所以我就凑个热闹来搞搞。&lt;/p&gt;
&lt;p&gt;文章以叙事性描写，非常规复现篇。&lt;br&gt;
    
    </summary>
    
      <category term="生活记录" scheme="sh1yan.top/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="漏洞复现" scheme="sh1yan.top/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="生活记录" scheme="sh1yan.top/tags/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>记录一次给某脚本增加两个字段的过程</title>
    <link href="sh1yan.top/2019/09/01/Record-the-process-of-adding-two-fields-to-a-script-at-a-time/"/>
    <id>sh1yan.top/2019/09/01/Record-the-process-of-adding-two-fields-to-a-script-at-a-time/</id>
    <published>2019-08-31T16:35:55.000Z</published>
    <updated>2019-09-02T03:04:39.907Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;周五快下班的时候，想着终于结束了一周挖坑种树的活，可以休息两天了。没想到，隔壁工地一朋友滴滴我，让我帮忙在一个脚本输出结果上增加两个字段，于是就有了本文。&lt;/p&gt;
&lt;p&gt;注：学习别人的code编写思路，也是一种成长。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 接收脚本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;文件地址：&lt;a href=&quot;链接: https://pan.baidu.com/s/1Xe496gG8fX2sPDp1CkO8MQ 提取码: p82b 复制这段内容后打开百度网盘手机App，操作更方便哦&quot;&gt;连接（原始和完善后均在）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接收到脚本后，看到这是一个 nsfocus rsas V6版本的一个漏洞报告转存工具，也就是把HTML页面的漏洞转存为Excel形式。&lt;br&gt;
    
    </summary>
    
      <category term="脚本编写" scheme="sh1yan.top/categories/%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
    
      <category term="安全服务" scheme="sh1yan.top/tags/%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="脚本编写" scheme="sh1yan.top/tags/%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>由安全审计扩展出的思维感悟</title>
    <link href="sh1yan.top/2019/08/13/Thoughts-Expanded-from-Safety-Audit/"/>
    <id>sh1yan.top/2019/08/13/Thoughts-Expanded-from-Safety-Audit/</id>
    <published>2019-08-13T13:52:55.000Z</published>
    <updated>2019-08-13T03:53:20.022Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从今年3月份开始，到现在已经一轮过去了，现在是开始第二轮，虽说不知道这个分享制度还会坚持多长时间，但是毕竟也是对各位好的，个人由衷的还是希望大家都能正确对待这件事，保持好这个良好的传统。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="sh1yan.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="安全审计" scheme="sh1yan.top/tags/%E5%AE%89%E5%85%A8%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MSF之命令笔记篇</title>
    <link href="sh1yan.top/2019/07/28/MSF-Command-Notes/"/>
    <id>sh1yan.top/2019/07/28/MSF-Command-Notes/</id>
    <published>2019-07-28T15:50:55.000Z</published>
    <updated>2019-07-28T09:22:02.399Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 一键式安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu-System&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /opt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &amp;gt; msfinstall &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod &lt;span class=&quot;number&quot;&gt;755&lt;/span&gt; msfinstall &amp;amp;&amp;amp; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./msfinstall&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="命令备忘" scheme="sh1yan.top/categories/%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="metasploit" scheme="sh1yan.top/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>CS之命令笔记篇</title>
    <link href="sh1yan.top/2019/07/20/CS-Command-Notes/"/>
    <id>sh1yan.top/2019/07/20/CS-Command-Notes/</id>
    <published>2019-07-20T03:50:55.000Z</published>
    <updated>2019-07-21T08:44:39.451Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00  文件架构&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;│  agscript            拓展应用的脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  c2lint              检查profile的错误异常&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  cobaltstrike        linux下启动脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  cobaltstrike.jar    客户端程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  teamserver          服务端程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  update              更新脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  update.jar          更新程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└─third-party          第三方工具&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        README.vncdll.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vncdll.x64.dll&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vncdll.x86.dll&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="命令备忘" scheme="sh1yan.top/categories/%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="Cobalt Strike" scheme="sh1yan.top/tags/Cobalt-Strike/"/>
    
  </entry>
  
  <entry>
    <title>UAC与ByPass-UAC</title>
    <link href="sh1yan.top/2019/07/11/UAC-and-ByPass-UAC/"/>
    <id>sh1yan.top/2019/07/11/UAC-and-ByPass-UAC/</id>
    <published>2019-07-11T14:50:55.000Z</published>
    <updated>2019-07-11T09:43:47.614Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用户账号控制（UAC），这机制自win7以来就一直存在了，同时因内网渗透需要，所以我就开始继续补坑（完善知识积累）了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 什么是UAC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;UAC 是微软在 Windows Vista 以后版本引入的一种安全机制，通过 UAC，应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员特别授予管理员级别的系统访问权限。UAC 可以阻止未经授权的应用程序自动进行安装，并防止无意中更改系统设置。&lt;br&gt;
    
    </summary>
    
      <category term="漏洞研究" scheme="sh1yan.top/categories/%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="UAC" scheme="sh1yan.top/tags/UAC/"/>
    
      <category term="ByPass-UAC" scheme="sh1yan.top/tags/ByPass-UAC/"/>
    
  </entry>
  
  <entry>
    <title>COM组件劫持原理与实践</title>
    <link href="sh1yan.top/2019/06/29/Principle-and-Practice-of-COM-Component-Hijacking/"/>
    <id>sh1yan.top/2019/06/29/Principle-and-Practice-of-COM-Component-Hijacking/</id>
    <published>2019-06-29T13:50:55.000Z</published>
    <updated>2019-06-29T12:59:45.835Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在术的道路上，从来都是独善其行，如能结余同行，自当求之不得。&lt;/p&gt;
&lt;p&gt;玄幻小说的世界结构，放之现代也是同理，望成之所成，念之所念。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 什么是COM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;什么是COM，说白了，就是一堆功能相关的interface，它是某种语言向另一种语言暴露功能的最大单位。&lt;/p&gt;
&lt;p&gt;COMcomponent（COM组件）是微软公司为了计算机工业的软件生产更加符合人类的行为方式开发的一种新的软件开发技术。&lt;/p&gt;
&lt;p&gt;在COM构架下，人们可以开发出各种各样的功能专一的组件，然后将它们按照需要组合起来，构成复杂的应用系统。&lt;br&gt;
    
    </summary>
    
      <category term="漏洞研究" scheme="sh1yan.top/categories/%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="COM组件劫持" scheme="sh1yan.top/tags/COM%E7%BB%84%E4%BB%B6%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>DLL劫持原理与实践</title>
    <link href="sh1yan.top/2019/06/16/The-Principle-and-Practice-of-DLL-Hijacking/"/>
    <id>sh1yan.top/2019/06/16/The-Principle-and-Practice-of-DLL-Hijacking/</id>
    <published>2019-06-15T17:25:55.000Z</published>
    <updated>2019-06-15T17:33:20.426Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DLL劫持算是一个老的漏洞，而且乌云漏洞库中也有很多的案例，只不过案例更多的只是验证一下，并没有教如何利用。至于为什么专门抓起来再学一遍了，唉，内网渗透需要。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 什么是DLL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里先摘抄一下百度百科的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DLL(Dynamic Link Library)文件为动态链接库文件，又称“应用程序拓展”，是软件文件类型。在Windows中，许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库，即DLL文件，放置于系统中。当我们执行某一个程序时，相应的DLL文件就会被调用。一个应用程序可使用多个DLL文件，一个DLL文件也可能被不同的应用程序使用，这样的DLL文件被称为共享DLL文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有一段，我觉得更好理解的。&lt;br&gt;
    
    </summary>
    
      <category term="漏洞研究" scheme="sh1yan.top/categories/%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="DLL劫持" scheme="sh1yan.top/tags/DLL%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>Windows访问令牌安全探究</title>
    <link href="sh1yan.top/2019/06/09/Windows-Access-Token-Security-Exploration/"/>
    <id>sh1yan.top/2019/06/09/Windows-Access-Token-Security-Exploration/</id>
    <published>2019-06-09T15:16:26.000Z</published>
    <updated>2019-06-10T07:39:51.547Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00 前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;access token俗称为访问令牌，围绕着该访问令牌也有着相应的渗透技巧，故而也就有这篇文章的总结。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01 什么是访问令牌（access token）?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows/desktop/SecAuthZ/access-tokens&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;访问令牌&lt;/a&gt;是用来描述进程或线程安全上下文的对象，令牌所包含的信息是与该user账户相关的进程或线程的身份和权限信息。当user登录时，系统通过将user输入的密码与储存在安全数据库中的密码进行对比。若密码正确，系统此时会为user生成一个访问令牌。之后，该user执行的每个进程都会拥有一个该访问令牌的拷贝。&lt;br&gt;
    
    </summary>
    
      <category term="漏洞研究" scheme="sh1yan.top/categories/%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="access token" scheme="sh1yan.top/tags/access-token/"/>
    
      <category term="令牌伪造" scheme="sh1yan.top/tags/%E4%BB%A4%E7%89%8C%E4%BC%AA%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>白银票据与黄金票据探究</title>
    <link href="sh1yan.top/2019/06/03/Discussion-on-Silver-Bill-and-Gold-Bill/"/>
    <id>sh1yan.top/2019/06/03/Discussion-on-Silver-Bill-and-Gold-Bill/</id>
    <published>2019-06-03T15:52:55.000Z</published>
    <updated>2019-06-03T15:09:14.900Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;0x00  前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在域渗透时，肯定会接触到两个最常见的概念，白银票据和黄金票据，而这两个票据主要是围绕着Kerberos这个认证协议所产生的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;0x01  Kerberos认证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kerberos 是一种网络认证协议，其设计目标是通过&lt;a href=&quot;https://baike.baidu.com/item/%E5%AF%86%E9%92%A5&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;密钥&lt;/a&gt;系统为客户机 / 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于&lt;a href=&quot;https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;主机操作系统&lt;/a&gt;的认证，无需基于&lt;a href=&quot;https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;主机地址&lt;/a&gt;的信任，不要求网络上所有主机的物理安全，并假定网络上传送的&lt;a href=&quot;https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%8C%85&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;数据包&lt;/a&gt;可以被任意地读取、修改和插入数据。在以上情况下， Kerberos 作为一种可信任的第三方认证服务，是通过传统的&lt;a href=&quot;https://baike.baidu.com/item/%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;密码技术&lt;/a&gt;（如：共享密钥）执行认证服务的。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="sh1yan.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="域渗透" scheme="sh1yan.top/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
      <category term="Kerberos认证" scheme="sh1yan.top/tags/Kerberos%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
</feed>
